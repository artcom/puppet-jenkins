#!/bin/bash
JENKINS_HOME=<%= slave_home %>
JENKINS_CONF=${JENKINS_HOME}/org.jenkins-ci.slave.jnlp.conf
JENKINS_SLAVE=`hostname -s | tr '[:upper:]' '[:lower:]'`
JENKINS_TOKEN=''
JAVA_ARGS='-Djava.awt.headless=true -XX:MaxPermSize=256M'
JAVA_ARGS_LOG=''
JAVA_TRUSTSTORE=${JENKINS_HOME}/.keystore
JAVA_TRUSTSTORE_PASS=''
# called when unloaded by launchctl
function unload() {
PID=`cat ${JENKINS_HOME}/.slave.pid`
  if [ "$PID" != "" ]; then
    kill $PID
    wait $PID
  fi
  echo
  echo "Stopping at `date`"
  echo
  exit 0
}

# launchctl sends SIGTERM to unload a daemon
# trap SIGTERM to be able to gracefully cleanup
trap "unload" HUP INT TERM

if [ -f ${JENKINS_CONF} ]; then
  chmod 400 ${JENKINS_CONF}
  source ${JENKINS_CONF}
fi


echo
echo "Starting at `date`"
echo

echo "Launching slave process at ${JENKINS_JNLP_URL}"
RESULT=-1
# If we use a trustStore for the Jenkins Master certificates, we need to pass it
# and its password to the java process that runs the slave. The password is stored
# in the OS X Keychain that we use for other purposes.
if [[ -f $JAVA_TRUSTSTORE ]]; then
  DARWIN_VERSION_MAJOR=$( uname -r | sed 's|\([^.]\)\..*|\1|g' )  
  if [ $DARWIN_VERSION_MAJOR -ge 12 ]; then
    JAVA_TRUSTSTORE_PASS=$( security find-generic-password -w -a `whoami` -s java_truststore login.keychain )
  else
    JAVA_TRUSTSTORE_PASS=$( security 2>&1 find-generic-password -g -a `whoami` -s java_truststore login.keychain | grep ^password | sed 's|^password: "\(.*\)"$|\1|g' )
  fi
  JAVA_ARGS_LOG="${JAVA_ARGS} -Djavax.net.ssl.trustStore=${JAVA_TRUSTSTORE} -Djavax.net.ssl.trustStorePassword=********"
  JAVA_ARGS="${JAVA_ARGS} -Djavax.net.ssl.trustStore=${JAVA_TRUSTSTORE} -Djavax.net.ssl.trustStorePassword=${JAVA_TRUSTSTORE_PASS}" 
fi
echo "Calling java ${JAVA_ARGS} -jar ${JENKINS_HOME}/<%= client_jar -%> -master <%= masterurl -%> <%= ui_user_flag -%> <%= ui_pass_flag -%> <%= executors_flag -%> <%= @labels_flag -%>"
java ${JAVA_ARGS} -jar ${JENKINS_HOME}/<%= client_jar -%> -master <%= masterurl -%> <%= ui_user_flag -%> <%= ui_pass_flag -%> <%= executors_flag -%> <%= @labels_flag -%> &
echo $! > ${JENKINS_HOME}/.slave.pid
wait `cat ${JENKINS_HOME}/.slave.pid`
unload